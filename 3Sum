 vector<vector<int>> threeSum(vector<int>& nums) {
    vector<vector<int>> answer;
    vector<int> arr;
    int size = nums.size();
    if (size == 0)
        return answer;
    int j = 0;
    int i = 0;
    int counter = 0;
    for (i = 1; i < size; i++)      //insertion sort
    {
        j = i - 1;
        int key = nums[j + 1];
        while (j >= 0 && key < nums[j])
        {
            nums[j + 1] = nums[j];
            nums[j] = key;
            j--;
        }
    }

    int index = 0;
    while (index < size && nums[index] < 0)
        index++;

    i = 0;
    j = 0;
    int k = 0;
    for (i = 0; i < index; i++)
    {
        j = i + 1;
        k = size - 1;

        while (k > j)
        {
            if (nums[i] + nums[j] + nums[k] == 0)
            {

                arr = { nums[i],nums[j],nums[k] };
                if (!answer.size())
                    answer.push_back(arr);
                else
                    if (answer[answer.size() - 1][0] != nums[i] || answer[answer.size() - 1][1] != nums[j] || answer[answer.size() - 1][2] != nums[k])
                        answer.push_back(arr);
                j++;
            }
            else if (nums[i] + nums[j] + nums[k] < 0)
                j++;
            else if (nums[i] + nums[j] + nums[k] > 0)
                k--;
        }
    }




    return answer;
}
